// Code generated by protoc-gen-go. DO NOT EDIT.
// source: repo-plugin.proto

package common

import (
	context "context"
	fmt "fmt"
	v1 "github.com/csweichel/werft/pkg/api/v1"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RepoHostRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepoHostRequest) Reset()         { *m = RepoHostRequest{} }
func (m *RepoHostRequest) String() string { return proto.CompactTextString(m) }
func (*RepoHostRequest) ProtoMessage()    {}
func (*RepoHostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d8b2585439eaf91, []int{0}
}

func (m *RepoHostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepoHostRequest.Unmarshal(m, b)
}
func (m *RepoHostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepoHostRequest.Marshal(b, m, deterministic)
}
func (m *RepoHostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepoHostRequest.Merge(m, src)
}
func (m *RepoHostRequest) XXX_Size() int {
	return xxx_messageInfo_RepoHostRequest.Size(m)
}
func (m *RepoHostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepoHostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepoHostRequest proto.InternalMessageInfo

type RepoHostResponse struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepoHostResponse) Reset()         { *m = RepoHostResponse{} }
func (m *RepoHostResponse) String() string { return proto.CompactTextString(m) }
func (*RepoHostResponse) ProtoMessage()    {}
func (*RepoHostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d8b2585439eaf91, []int{1}
}

func (m *RepoHostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepoHostResponse.Unmarshal(m, b)
}
func (m *RepoHostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepoHostResponse.Marshal(b, m, deterministic)
}
func (m *RepoHostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepoHostResponse.Merge(m, src)
}
func (m *RepoHostResponse) XXX_Size() int {
	return xxx_messageInfo_RepoHostResponse.Size(m)
}
func (m *RepoHostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepoHostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepoHostResponse proto.InternalMessageInfo

func (m *RepoHostResponse) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type ResolveRequest struct {
	Repository           *v1.Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ResolveRequest) Reset()         { *m = ResolveRequest{} }
func (m *ResolveRequest) String() string { return proto.CompactTextString(m) }
func (*ResolveRequest) ProtoMessage()    {}
func (*ResolveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d8b2585439eaf91, []int{2}
}

func (m *ResolveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveRequest.Unmarshal(m, b)
}
func (m *ResolveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveRequest.Marshal(b, m, deterministic)
}
func (m *ResolveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveRequest.Merge(m, src)
}
func (m *ResolveRequest) XXX_Size() int {
	return xxx_messageInfo_ResolveRequest.Size(m)
}
func (m *ResolveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveRequest proto.InternalMessageInfo

func (m *ResolveRequest) GetRepository() *v1.Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type ResolveResponse struct {
	Repository           *v1.Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ResolveResponse) Reset()         { *m = ResolveResponse{} }
func (m *ResolveResponse) String() string { return proto.CompactTextString(m) }
func (*ResolveResponse) ProtoMessage()    {}
func (*ResolveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d8b2585439eaf91, []int{3}
}

func (m *ResolveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveResponse.Unmarshal(m, b)
}
func (m *ResolveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveResponse.Marshal(b, m, deterministic)
}
func (m *ResolveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveResponse.Merge(m, src)
}
func (m *ResolveResponse) XXX_Size() int {
	return xxx_messageInfo_ResolveResponse.Size(m)
}
func (m *ResolveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveResponse proto.InternalMessageInfo

func (m *ResolveResponse) GetRepository() *v1.Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type ContentInitContainerRequest struct {
	Repository           *v1.Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ContentInitContainerRequest) Reset()         { *m = ContentInitContainerRequest{} }
func (m *ContentInitContainerRequest) String() string { return proto.CompactTextString(m) }
func (*ContentInitContainerRequest) ProtoMessage()    {}
func (*ContentInitContainerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d8b2585439eaf91, []int{4}
}

func (m *ContentInitContainerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentInitContainerRequest.Unmarshal(m, b)
}
func (m *ContentInitContainerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentInitContainerRequest.Marshal(b, m, deterministic)
}
func (m *ContentInitContainerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentInitContainerRequest.Merge(m, src)
}
func (m *ContentInitContainerRequest) XXX_Size() int {
	return xxx_messageInfo_ContentInitContainerRequest.Size(m)
}
func (m *ContentInitContainerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentInitContainerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContentInitContainerRequest proto.InternalMessageInfo

func (m *ContentInitContainerRequest) GetRepository() *v1.Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type ContentInitContainerResponse struct {
	Container            []byte   `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContentInitContainerResponse) Reset()         { *m = ContentInitContainerResponse{} }
func (m *ContentInitContainerResponse) String() string { return proto.CompactTextString(m) }
func (*ContentInitContainerResponse) ProtoMessage()    {}
func (*ContentInitContainerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d8b2585439eaf91, []int{5}
}

func (m *ContentInitContainerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentInitContainerResponse.Unmarshal(m, b)
}
func (m *ContentInitContainerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentInitContainerResponse.Marshal(b, m, deterministic)
}
func (m *ContentInitContainerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentInitContainerResponse.Merge(m, src)
}
func (m *ContentInitContainerResponse) XXX_Size() int {
	return xxx_messageInfo_ContentInitContainerResponse.Size(m)
}
func (m *ContentInitContainerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentInitContainerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContentInitContainerResponse proto.InternalMessageInfo

func (m *ContentInitContainerResponse) GetContainer() []byte {
	if m != nil {
		return m.Container
	}
	return nil
}

type DownloadRequest struct {
	Repository           *v1.Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Path                 string         `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DownloadRequest) Reset()         { *m = DownloadRequest{} }
func (m *DownloadRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadRequest) ProtoMessage()    {}
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d8b2585439eaf91, []int{6}
}

func (m *DownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadRequest.Unmarshal(m, b)
}
func (m *DownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadRequest.Marshal(b, m, deterministic)
}
func (m *DownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadRequest.Merge(m, src)
}
func (m *DownloadRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadRequest.Size(m)
}
func (m *DownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadRequest proto.InternalMessageInfo

func (m *DownloadRequest) GetRepository() *v1.Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *DownloadRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type DownloadResponse struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadResponse) Reset()         { *m = DownloadResponse{} }
func (m *DownloadResponse) String() string { return proto.CompactTextString(m) }
func (*DownloadResponse) ProtoMessage()    {}
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d8b2585439eaf91, []int{7}
}

func (m *DownloadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadResponse.Unmarshal(m, b)
}
func (m *DownloadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadResponse.Marshal(b, m, deterministic)
}
func (m *DownloadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadResponse.Merge(m, src)
}
func (m *DownloadResponse) XXX_Size() int {
	return xxx_messageInfo_DownloadResponse.Size(m)
}
func (m *DownloadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadResponse proto.InternalMessageInfo

func (m *DownloadResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type GetRemoteAnnotationsRequest struct {
	Repository           *v1.Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetRemoteAnnotationsRequest) Reset()         { *m = GetRemoteAnnotationsRequest{} }
func (m *GetRemoteAnnotationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetRemoteAnnotationsRequest) ProtoMessage()    {}
func (*GetRemoteAnnotationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d8b2585439eaf91, []int{8}
}

func (m *GetRemoteAnnotationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRemoteAnnotationsRequest.Unmarshal(m, b)
}
func (m *GetRemoteAnnotationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRemoteAnnotationsRequest.Marshal(b, m, deterministic)
}
func (m *GetRemoteAnnotationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRemoteAnnotationsRequest.Merge(m, src)
}
func (m *GetRemoteAnnotationsRequest) XXX_Size() int {
	return xxx_messageInfo_GetRemoteAnnotationsRequest.Size(m)
}
func (m *GetRemoteAnnotationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRemoteAnnotationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRemoteAnnotationsRequest proto.InternalMessageInfo

func (m *GetRemoteAnnotationsRequest) GetRepository() *v1.Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type GetRemoteAnnotationsResponse struct {
	Annotations          map[string]string `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetRemoteAnnotationsResponse) Reset()         { *m = GetRemoteAnnotationsResponse{} }
func (m *GetRemoteAnnotationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetRemoteAnnotationsResponse) ProtoMessage()    {}
func (*GetRemoteAnnotationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d8b2585439eaf91, []int{9}
}

func (m *GetRemoteAnnotationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRemoteAnnotationsResponse.Unmarshal(m, b)
}
func (m *GetRemoteAnnotationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRemoteAnnotationsResponse.Marshal(b, m, deterministic)
}
func (m *GetRemoteAnnotationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRemoteAnnotationsResponse.Merge(m, src)
}
func (m *GetRemoteAnnotationsResponse) XXX_Size() int {
	return xxx_messageInfo_GetRemoteAnnotationsResponse.Size(m)
}
func (m *GetRemoteAnnotationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRemoteAnnotationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRemoteAnnotationsResponse proto.InternalMessageInfo

func (m *GetRemoteAnnotationsResponse) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func init() {
	proto.RegisterType((*RepoHostRequest)(nil), "repoplugin.RepoHostRequest")
	proto.RegisterType((*RepoHostResponse)(nil), "repoplugin.RepoHostResponse")
	proto.RegisterType((*ResolveRequest)(nil), "repoplugin.ResolveRequest")
	proto.RegisterType((*ResolveResponse)(nil), "repoplugin.ResolveResponse")
	proto.RegisterType((*ContentInitContainerRequest)(nil), "repoplugin.ContentInitContainerRequest")
	proto.RegisterType((*ContentInitContainerResponse)(nil), "repoplugin.ContentInitContainerResponse")
	proto.RegisterType((*DownloadRequest)(nil), "repoplugin.DownloadRequest")
	proto.RegisterType((*DownloadResponse)(nil), "repoplugin.DownloadResponse")
	proto.RegisterType((*GetRemoteAnnotationsRequest)(nil), "repoplugin.GetRemoteAnnotationsRequest")
	proto.RegisterType((*GetRemoteAnnotationsResponse)(nil), "repoplugin.GetRemoteAnnotationsResponse")
	proto.RegisterMapType((map[string]string)(nil), "repoplugin.GetRemoteAnnotationsResponse.AnnotationsEntry")
}

func init() {
	proto.RegisterFile("repo-plugin.proto", fileDescriptor_0d8b2585439eaf91)
}

var fileDescriptor_0d8b2585439eaf91 = []byte{
	// 447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0xdd, 0x6c, 0x61, 0xb7, 0x3b, 0x45, 0xbb, 0x59, 0x6b, 0x0f, 0x51, 0x9a, 0x43, 0xe5, 0x03,
	0xf4, 0x00, 0xa9, 0x5a, 0x2e, 0x80, 0x10, 0xa2, 0x50, 0x54, 0x38, 0x20, 0x21, 0x4b, 0x5c, 0xe0,
	0x14, 0x8a, 0xa1, 0x51, 0x53, 0x4f, 0x88, 0xdd, 0x54, 0xfd, 0x6d, 0x5c, 0xf9, 0x61, 0x28, 0xb1,
	0xd3, 0x7c, 0x28, 0x0a, 0xa2, 0xb7, 0xf1, 0xf3, 0xcc, 0x9b, 0x37, 0x93, 0xe7, 0xc0, 0x6d, 0xc2,
	0x63, 0x7c, 0x12, 0x47, 0xbb, 0x9f, 0xa1, 0xf0, 0xe3, 0x04, 0x15, 0x12, 0xc8, 0x20, 0x8d, 0xb8,
	0x24, 0x88, 0xc3, 0x49, 0x3a, 0x9d, 0xec, 0x79, 0xf2, 0x43, 0xe9, 0x7b, 0x7a, 0x0b, 0x37, 0x8c,
	0xc7, 0xf8, 0x1e, 0xa5, 0x62, 0xfc, 0xd7, 0x8e, 0x4b, 0x45, 0x1f, 0x82, 0x5d, 0x42, 0x32, 0x46,
	0x21, 0x39, 0x21, 0x70, 0x6f, 0x8d, 0x52, 0x39, 0xd6, 0xc8, 0x1a, 0x5f, 0xb1, 0x3c, 0xa6, 0xaf,
	0xe1, 0x9a, 0x71, 0x89, 0x51, 0xca, 0x4d, 0x25, 0xf1, 0x21, 0x6f, 0x27, 0x43, 0x85, 0xc9, 0x21,
	0xcf, 0x1d, 0xcc, 0xae, 0xfd, 0x74, 0xea, 0xb3, 0x23, 0xca, 0x2a, 0x19, 0x74, 0x9e, 0x35, 0x37,
	0x0c, 0xa6, 0xd1, 0xff, 0x52, 0x7c, 0x84, 0xe1, 0x5b, 0x14, 0x8a, 0x0b, 0xf5, 0x41, 0x84, 0x2a,
	0x0b, 0x83, 0x50, 0xf0, 0xe4, 0x54, 0x45, 0x2f, 0xc1, 0x6b, 0xa7, 0x33, 0xf2, 0x3c, 0xb8, 0x5a,
	0x15, 0x60, 0x4e, 0xf7, 0x80, 0x95, 0x00, 0xfd, 0x0c, 0x37, 0x0b, 0xdc, 0x8b, 0x08, 0x83, 0xef,
	0x27, 0x0a, 0xc8, 0x16, 0x1d, 0x07, 0x6a, 0xed, 0x9c, 0xeb, 0x45, 0x67, 0x31, 0x7d, 0x0c, 0x76,
	0x49, 0x6b, 0x84, 0x38, 0x70, 0xb9, 0xd2, 0x42, 0x8d, 0x8c, 0xe2, 0x98, 0x6d, 0x64, 0xc9, 0x15,
	0xe3, 0x5b, 0x54, 0x7c, 0x2e, 0x04, 0xaa, 0x40, 0x85, 0x28, 0xe4, 0xa9, 0x1b, 0xf9, 0x6d, 0x81,
	0xd7, 0xce, 0x67, 0x94, 0x7c, 0x85, 0x41, 0x50, 0xc2, 0x8e, 0x35, 0xea, 0x8d, 0x07, 0xb3, 0xe7,
	0x7e, 0xe9, 0x3b, 0xbf, 0xab, 0xdc, 0xaf, 0x60, 0xef, 0x84, 0x4a, 0x0e, 0xac, 0xca, 0xe6, 0xbe,
	0x02, 0xbb, 0x99, 0x40, 0x6c, 0xe8, 0x6d, 0xf8, 0xc1, 0x58, 0x31, 0x0b, 0xc9, 0x1d, 0xdc, 0x4f,
	0x83, 0x68, 0xc7, 0xcd, 0xd6, 0xf4, 0xe1, 0xc5, 0xf9, 0x33, 0x6b, 0xf6, 0xa7, 0xa7, 0xcd, 0xac,
	0x87, 0xf9, 0x94, 0xeb, 0x21, 0x4b, 0xe8, 0x17, 0x06, 0x27, 0xc3, 0xaa, 0xd0, 0xc6, 0x4b, 0x70,
	0xbd, 0xf6, 0x4b, 0xad, 0x9c, 0x9e, 0x91, 0x05, 0x5c, 0x1a, 0xff, 0x12, 0xb7, 0x9e, 0x5a, 0x7d,
	0x16, 0xee, 0xb0, 0xf5, 0xee, 0xc8, 0xb2, 0x81, 0xbb, 0x36, 0xcf, 0x91, 0x47, 0xd5, 0xb2, 0x0e,
	0x93, 0xbb, 0xe3, 0x7f, 0x27, 0x1e, 0x9b, 0x2d, 0xa1, 0x5f, 0x78, 0xa9, 0x3e, 0x7b, 0xc3, 0xb8,
	0xf5, 0xd9, 0x9b, 0xf6, 0xd3, 0xaa, 0xdb, 0xbe, 0x6b, 0x5d, 0x75, 0x87, 0x11, 0xeb, 0xaa, 0xbb,
	0x2c, 0x42, 0xcf, 0xde, 0xf4, 0xbf, 0x5c, 0xac, 0x70, 0xbb, 0x45, 0xf1, 0xed, 0x22, 0xff, 0x6d,
	0x3d, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x57, 0x94, 0x4a, 0x67, 0xeb, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RepositoryPluginClient is the client API for RepositoryPlugin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RepositoryPluginClient interface {
	// RepoHost returns the host which this plugins integrates with
	RepoHost(ctx context.Context, in *RepoHostRequest, opts ...grpc.CallOption) (*RepoHostResponse, error)
	// Resolve resolves the repo's revision based on its ref(erence)
	Resolve(ctx context.Context, in *ResolveRequest, opts ...grpc.CallOption) (*ResolveResponse, error)
	// ContentInitContainer produces the init container YAML required to initialize
	// the build context from this repository in /workspace.
	ContentInitContainer(ctx context.Context, in *ContentInitContainerRequest, opts ...grpc.CallOption) (*ContentInitContainerResponse, error)
	// Download downloads a file from the repository.
	Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*DownloadResponse, error)
	// GetRemoteAnnotations extracts werft annotations form information associated
	// with a particular commit, e.g. the commit message, PRs or merge requests.
	// Implementors can expect the revision of the repo object to be set.
	GetRemoteAnnotations(ctx context.Context, in *GetRemoteAnnotationsRequest, opts ...grpc.CallOption) (*GetRemoteAnnotationsResponse, error)
}

type repositoryPluginClient struct {
	cc grpc.ClientConnInterface
}

func NewRepositoryPluginClient(cc grpc.ClientConnInterface) RepositoryPluginClient {
	return &repositoryPluginClient{cc}
}

func (c *repositoryPluginClient) RepoHost(ctx context.Context, in *RepoHostRequest, opts ...grpc.CallOption) (*RepoHostResponse, error) {
	out := new(RepoHostResponse)
	err := c.cc.Invoke(ctx, "/repoplugin.RepositoryPlugin/RepoHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryPluginClient) Resolve(ctx context.Context, in *ResolveRequest, opts ...grpc.CallOption) (*ResolveResponse, error) {
	out := new(ResolveResponse)
	err := c.cc.Invoke(ctx, "/repoplugin.RepositoryPlugin/Resolve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryPluginClient) ContentInitContainer(ctx context.Context, in *ContentInitContainerRequest, opts ...grpc.CallOption) (*ContentInitContainerResponse, error) {
	out := new(ContentInitContainerResponse)
	err := c.cc.Invoke(ctx, "/repoplugin.RepositoryPlugin/ContentInitContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryPluginClient) Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*DownloadResponse, error) {
	out := new(DownloadResponse)
	err := c.cc.Invoke(ctx, "/repoplugin.RepositoryPlugin/Download", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repositoryPluginClient) GetRemoteAnnotations(ctx context.Context, in *GetRemoteAnnotationsRequest, opts ...grpc.CallOption) (*GetRemoteAnnotationsResponse, error) {
	out := new(GetRemoteAnnotationsResponse)
	err := c.cc.Invoke(ctx, "/repoplugin.RepositoryPlugin/GetRemoteAnnotations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RepositoryPluginServer is the server API for RepositoryPlugin service.
type RepositoryPluginServer interface {
	// RepoHost returns the host which this plugins integrates with
	RepoHost(context.Context, *RepoHostRequest) (*RepoHostResponse, error)
	// Resolve resolves the repo's revision based on its ref(erence)
	Resolve(context.Context, *ResolveRequest) (*ResolveResponse, error)
	// ContentInitContainer produces the init container YAML required to initialize
	// the build context from this repository in /workspace.
	ContentInitContainer(context.Context, *ContentInitContainerRequest) (*ContentInitContainerResponse, error)
	// Download downloads a file from the repository.
	Download(context.Context, *DownloadRequest) (*DownloadResponse, error)
	// GetRemoteAnnotations extracts werft annotations form information associated
	// with a particular commit, e.g. the commit message, PRs or merge requests.
	// Implementors can expect the revision of the repo object to be set.
	GetRemoteAnnotations(context.Context, *GetRemoteAnnotationsRequest) (*GetRemoteAnnotationsResponse, error)
}

// UnimplementedRepositoryPluginServer can be embedded to have forward compatible implementations.
type UnimplementedRepositoryPluginServer struct {
}

func (*UnimplementedRepositoryPluginServer) RepoHost(ctx context.Context, req *RepoHostRequest) (*RepoHostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepoHost not implemented")
}
func (*UnimplementedRepositoryPluginServer) Resolve(ctx context.Context, req *ResolveRequest) (*ResolveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Resolve not implemented")
}
func (*UnimplementedRepositoryPluginServer) ContentInitContainer(ctx context.Context, req *ContentInitContainerRequest) (*ContentInitContainerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentInitContainer not implemented")
}
func (*UnimplementedRepositoryPluginServer) Download(ctx context.Context, req *DownloadRequest) (*DownloadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Download not implemented")
}
func (*UnimplementedRepositoryPluginServer) GetRemoteAnnotations(ctx context.Context, req *GetRemoteAnnotationsRequest) (*GetRemoteAnnotationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRemoteAnnotations not implemented")
}

func RegisterRepositoryPluginServer(s *grpc.Server, srv RepositoryPluginServer) {
	s.RegisterService(&_RepositoryPlugin_serviceDesc, srv)
}

func _RepositoryPlugin_RepoHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepoHostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryPluginServer).RepoHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repoplugin.RepositoryPlugin/RepoHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryPluginServer).RepoHost(ctx, req.(*RepoHostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryPlugin_Resolve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResolveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryPluginServer).Resolve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repoplugin.RepositoryPlugin/Resolve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryPluginServer).Resolve(ctx, req.(*ResolveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryPlugin_ContentInitContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentInitContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryPluginServer).ContentInitContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repoplugin.RepositoryPlugin/ContentInitContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryPluginServer).ContentInitContainer(ctx, req.(*ContentInitContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryPlugin_Download_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryPluginServer).Download(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repoplugin.RepositoryPlugin/Download",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryPluginServer).Download(ctx, req.(*DownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepositoryPlugin_GetRemoteAnnotations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRemoteAnnotationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepositoryPluginServer).GetRemoteAnnotations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repoplugin.RepositoryPlugin/GetRemoteAnnotations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepositoryPluginServer).GetRemoteAnnotations(ctx, req.(*GetRemoteAnnotationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RepositoryPlugin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "repoplugin.RepositoryPlugin",
	HandlerType: (*RepositoryPluginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RepoHost",
			Handler:    _RepositoryPlugin_RepoHost_Handler,
		},
		{
			MethodName: "Resolve",
			Handler:    _RepositoryPlugin_Resolve_Handler,
		},
		{
			MethodName: "ContentInitContainer",
			Handler:    _RepositoryPlugin_ContentInitContainer_Handler,
		},
		{
			MethodName: "Download",
			Handler:    _RepositoryPlugin_Download_Handler,
		},
		{
			MethodName: "GetRemoteAnnotations",
			Handler:    _RepositoryPlugin_GetRemoteAnnotations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "repo-plugin.proto",
}
